to get public ip :
# curl ifconfig.me
# curl ipecho.net/plain
# curl ident.me
# curl bot.whatismyipaddress.com
# wget -qO- ifconfig.me
________________________________________
ssh passwordless authentication :

to copu pub key of the server to target machine to enable passwordless authentication 
# ssh-copy-id root@192.168.22.46
________________________________________
SVN:
creatingDevSecops sprint sony
# svn co url
# svn add *
	to version the new content
# svn commit -m "tag"


copy a file to all of the directories in a directory :
echo $(ls -l | cut -d " " -f10 | tail -5) | xargs -n 1 cp file


create directories from a file containing names:


to find a pattern in all files and folders:
find / -type f -exec grep -H 'text-to-find-here' {} \;

to replace a pattern in all files in folders :
find ./ -type f -exec sed -i 's/apt/yum/g' {} \;


to replace the space in directory names with - in current directory and sub-directory 
# find . -name "* *" -type d | rename 's/ /-/g'

to replace the space in file names in current directory and sub-directories
# find . -name "* *" -type f | rename 's/ /-/g'



to compress:
# tar -zcvf file.tar folder/
# zip -r file.zip foldertozip/

to extract:
# tar -xvzf file.tar 
# unzip file.zip

to list all versions of available package:
# apt list --all-versions package_name

to install a specific version
# sudo apt install vlc=3.0.16-1build7

to show drive frmat type
# df -T

to show available mount pints on a server
#showmount -e <nfs server ip>

to unmount a mount
# sudo umount [mount_point]

to mount a drive
# sudo mount 192.168.72.136:/mnt/sharedfolder /mnt/client_sharedfolder

to set default namespace in kubernetes
# kubectl config set-context --current --namespace=team-a


WGET:
to use username and password to download anything:
wget --user=Henry --password='Your Password' https://download.teamviewer.com/download/linux/teamviewer_amd64.deb

$ wget --user=<username> --password=<user-password> <URL>

$ wget --user=<username> --ask-password <URL>
to ask password before execution

CURL:
to upload files using curl with status bar 
# curl -o upload.tmp -# -u satya:P@ssword123 http://dockerhub.trinityiot.in:8081/repository/TRINITYFILES/awsjenkins/ --upload-file awsopt.zip && cat upload.tmp && rm upload.tmp


to run docker inside a container ,docker-cli must need to be installed inside the container and then use the command to 
Dockerfile::
FROM jenkins/jenkins:2.346.3-jdk11
USER root
RUN apt-get update && apt-get install -y lsb-release
RUN curl -fsSLo /usr/share/keyrings/docker-archive-keyring.asc \
  https://download.docker.com/linux/debian/gpg
RUN echo "deb [arch=$(dpkg --print-architecture) \
  signed-by=/usr/share/keyrings/docker-archive-keyring.asc] \
  https://download.docker.com/linux/debian \
  $(lsb_release -cs) stable" > /etc/apt/sources.list.d/docker.list
RUN apt-get update && apt-get install -y docker-ce-cli
#USER jenkins
#RUN jenkins-plugin-cli --plugins "blueocean:1.25.6 docker-workflow:1.29"
#COPY /var/run/docker.sock /var/run/docker.sock

build the image and run the command :
docker run --privileged -d -v /var/run/docker.sock:/var/run/docker.sock jenkins333

if any permissions error
add group and users to the group on host machine and container.
# groupadd docker
#usermod -a -G docker jenkins
# usermod -a -G docker root



extend logical volume ubuntu :
#  lvextend -l +100%FREE  /dev/mapper/ubuntu--vg-ubuntu--lv
#  sudo resize2fs /dev/mapper/ubuntu--vg-ubuntu--lv

new 
------
lsblk
  161  sudo parted /dev/sda
  162  sudo pvresize /dev/sda3
  163  sudo lvresize -l +100%FREE /dev/ubuntu-vg/ubuntu-lv
  164  sudo lvdisplay /dev/ubuntu-vg/ubuntu-lv
  165  sudo resize2fs /dev/ubuntu-vg/ubuntu-lv
------

_______________________________________________
install specific version of packages in alpine linux :
# Both are equal
apk add packagename=1.2.3-suffix
apk add 'packagename<1.2.3-suffix'
___________________________________________
SVN setup issue python-ldap:

"Don't blindly remove/install software"
In a Ubuntu or Debian based distro, you can use apt-file to find the name of the exact package that includes the missing header file.

do this once
# sudo apt-get install apt-file
# sudo apt-file update

$ apt-file search lber.h
libldap2-dev: /usr/include/lber.h
As you could see from the output of apt-file search lber.h, you'd just need to install the package libldap2-dev.

# sudo apt-get install libldap2-dev

___________________________________________________

to set timezone in ubuntu:
to list all timezones:
# timedatectl list-timezones
	get the zone and changei in tzdata reconfigure

# apt install tzdata
# sudo dpkg-reconfigure tzdata

or 
# sudo timedatectl set-timezone your_time_zone

can edit in the following file to:
# cat /etc/timezone
____________________________
ping port:

# nmap -p <port> <ip>

# nc -vz <ip> <port>

# telnet ip port 

_______________________________
build package by pourging the local repository 

# mvn dependency:purge-local-repository
_________________________________

Setting aliases for commands
#nano /etc/bash.bashrc

add aliases commands at the end of the file 
alias shortcut='command'
_________________________________

List directories by the number of files in them (helps to free inodes)

# sudo find . -xdev -type f | cut -d "/" -f 2 | sort | uniq -c | sort -n
______________________________________

Jenkins with docker ,run command:
# docker run -itd --privileged -p 9999:8080 -p 59999:50000 -v /var/run/docker.sock:/var/run/docker.sock -v vol-jenkins-home:/var/jenkins_home jenkins22
_________________________________________________________________

to list the dependencies of a package in server with no internet 
this command will also print the URI's of the dependency packages
#  apt-get --print-uris --yes install tomcat | grep ^\' | cut -d\' -f2 >downloads.list
#  wget --input-file=downloads.list
this will download all the required packages from the list 



to list the dependencies of a deb package 
# dpkg -I package.deb



to download all the dependencies of a package in a servr with internet 
#apt install apt-rdepends
#apt-get download $(apt-rdepends <package>|grep -v "^ ")


to download all installed packages in ubuntu to a folder :
# dpkg -l | grep "^ii"| awk ' {print $2} ' | xargs sudo apt-get -y install --reinstall --download-only
    
/var/cache/apt/archives - downlaoded packages will be here .
______________________________________________________________
shell script to download all the required dependencies of a package :
==========
#!/bin/bash
package=nano
sudo apt-cache depends "$package" | grep Depends: >> deb.list
sed -i -e 's/[<>|:]//g' deb.list
sed -i -e 's/Depends//g' deb.list
sed -i -e 's/ //g' deb.list
filename="deb.list"
while read -r line
do
    name="$line"
    apt-get download "$name"
done < "$filename"
apt-get download "$package"
===========
__________________________________________________________________

if the db says user with group and permissions exit ,run this query in db query .

use IOT_FileUpload            
EXEC sp_change_users_login 'Auto_Fix', 'tiothubdbu'
------------------------------------------------------------------

to push all helm charts in one go :
cd to the folder where chart.tgz files are there and execute the following command .


# cat charts | xargs -n 1 curl -u admin:admin@123 http://192.168.1.86:8081/repository/HELM/ --upload-file

charts file contains all charts names


_____________________________________________________________
running a command from a value
set value :
1.variable=value
2.echo $k | bash -        (to run the outputted command)


ex:
#k=ls
# echo $K
ls
# echo $k | bash -
executes ls command
__________________________________________________________________

to print all env variables in a ubuntu machine :
# printenv

________________________________________________________________
If u get stateoverride issue on any service due to the user locking in on the service despite the service is stopped/deleted
# sudo nano /var/lib/dpkg/statoverride

Open this file and remove the line with offending user  and any other empty lines
_______________________________________________________________
to save all installed packages on ubuntu 

# apt install apt-clone
# sudo apt-clone clone anyfoldername/
	this will generate a tar.gz file in the specifierd directory 

#sudo apt-clone restore clonedPackages.tar.gz --destination ~/folderToRestoreTo
	this will restore the packages from tar.gz file to 

#apt-clone info clonedPackages.tar.gz
	this will give info on the backup file 
__________________________________________________________________

wget -r -np -nH --cut-dirs=3 -R index.html http://hostname/aaa/bbb/ccc/ddd/

Explanation:

It will download all files and subfolders in ddd directory
-r : recursively
-np : not going to upper directories, like ccc/…
-nH : not saving files to hostname folder
--cut-dirs=3 : but saving it to ddd by omitting first 3 folders aaa, bbb, ccc
-R index.html : excluding index.html files
_________________________________________________________________


To check IP in any file 

 sudo find / -type f -exec grep -H 192.168.1.143 {} +


______________________________________________________________________

